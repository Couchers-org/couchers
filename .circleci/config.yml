orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
version: 2.1
jobs:
  compile_protos:
    docker:
      - image: couchers/grpc
    steps:
      - checkout
      - run: cd app && ./generate_protos.sh
      - persist_to_workspace:
          root: .
          paths:
            - "*"
  build_proxy:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            cd app/proxy
            docker build -t couchers/proxy .
      - run: docker save -o couchers-proxy.tar.gz couchers/proxy
      - persist_to_workspace:
          root: .
          paths:
            - "*"
  upload_proxy:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run: docker load -i couchers-proxy.tar.gz
      - run: docker tag couchers/proxy $AWS_ECR_ACCOUNT_URL/couchers/proxy
      - aws-ecr/ecr-login
      - aws-ecr/push-image:
          repo: couchers/proxy
  build_test_backend:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            cd app/backend
            docker build -t couchers/backend .
      - run: mkdir test-results
      - run: docker run --env-file app/backend.test.env couchers/backend pytest src --junitxml=test-results/junit.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run: docker save -o couchers-backend.tar.gz couchers/backend
      - persist_to_workspace:
          root: .
          paths:
            - "*"
  upload_backend:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run: docker load -i couchers-backend.tar.gz
      - run: docker tag couchers/backend $AWS_ECR_ACCOUNT_URL/couchers/backend
      - aws-ecr/ecr-login
      - aws-ecr/push-image:
          repo: couchers/backend
  build_test_media:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            cd app/media
            docker build -t couchers/media .
      - run: mkdir test-results
      - run: docker run --env-file app/media.test.env couchers/media pytest src --junitxml=test-results/junit.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run: docker save -o couchers-media.tar.gz couchers/media
      - persist_to_workspace:
          root: .
          paths:
            - "*"
  upload_media:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run: docker load -i couchers-media.tar.gz
      - run: docker tag couchers/media $AWS_ECR_ACCOUNT_URL/couchers/media
      - aws-ecr/ecr-login
      - aws-ecr/push-image:
          repo: couchers/media
  build_frontend:
    docker:
      - image: node:14-alpine
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            cd app/frontend
            yarn
            yarn build
      - persist_to_workspace:
          root: .
          paths:
            - "*"
  upload_frontend:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            cd app/frontend
            aws s3 sync dist/ s3://${AWS_S3_BUCKET_NAME} --acl public-read
            aws cloudfront create-invalidation --distribution-id "${AWS_CF_DISTRIBUTION_ID}" --paths "/*"
workflows:
  version: 2
  proxy:
    jobs:
      - compile_protos
      - build_proxy:
          requires:
            - compile_protos
      - upload_proxy:
          requires:
            - build_proxy
          filters:
            branches:
              only: develop
  backend:
    jobs:
      - compile_protos
      - build_test_backend:
          requires:
            - compile_protos
      - upload_backend:
          requires:
            - build_test_backend
          filters:
            branches:
              only: develop
  media:
    jobs:
      - compile_protos
      - build_test_media:
          requires:
            - compile_protos
      - upload_media:
          requires:
            - build_test_media
          filters:
            branches:
              only: develop
  frontend:
    jobs:
      - compile_protos
      - build_frontend:
          requires:
            - compile_protos
      - upload_frontend:
          requires:
            - build_frontend
          filters:
            branches:
              only: develop

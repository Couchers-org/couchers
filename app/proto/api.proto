syntax = "proto3";

package org.couchers.api.core;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

import "annotations.proto";

service API {
  option (auth_level) = AUTH_LEVEL_SECURE;

  rpc Ping(PingReq) returns (PingRes) {
    // Pings the server for updates and basic user info
  }

  rpc GetUser(GetUserReq) returns (User) {
    // Get info about a particular user
  }

  rpc UpdateProfile(UpdateProfileReq) returns (google.protobuf.Empty) {
    // Update your profile
    // *Nullable can be set to null to clear the value. is_null defaults to false.
  }

  rpc SendFriendRequest(SendFriendRequestReq) returns (google.protobuf.Empty);

  rpc ListFriendRequests(google.protobuf.Empty) returns (ListFriendRequestsRes);

  rpc ListFriends(google.protobuf.Empty) returns (ListFriendsRes);

  rpc ListMutualFriends(ListMutualFriendsReq) returns (ListMutualFriendsRes) {
    // List mutual friends between requester and requested user
    // When called on self, returns empty list
  }

  rpc RespondFriendRequest(RespondFriendRequestReq) returns (google.protobuf.Empty);

  rpc CancelFriendRequest(CancelFriendRequestReq) returns (google.protobuf.Empty);

  rpc InitiateMediaUpload(google.protobuf.Empty) returns (InitiateMediaUploadRes) {
    // Initiate a media upload
  }
}

message SendFriendRequestReq {
  int64 user_id = 1;
}

message FriendRequest {
  int64 friend_request_id = 1;

  enum FriendRequestStatus {
    // these are the only two states that a user will see
    PENDING = 0;
    ACCEPTED = 1;
  }

  FriendRequestStatus state = 2;

  int64 user_id = 3;

  // we sent the request if true, received it if false
  bool sent = 4;
}

message RespondFriendRequestReq {
  int64 friend_request_id = 1;

  bool accept = 2;
}

message CancelFriendRequestReq {
  int64 friend_request_id = 1;
}

message ListFriendRequestsRes {
  repeated FriendRequest sent = 1;
  repeated FriendRequest received = 2;
}

message ListFriendsRes {
  repeated int64 user_ids = 1;
}

message ListMutualFriendsReq {
  int64 user_id = 1;
}

message ListMutualFriendsRes {
  repeated MutualFriend mutual_friends = 1;
}

message PingReq {}

message PingRes {
  User user = 1;
  uint32 unseen_message_count = 2;
  uint32 unseen_sent_host_request_count = 5;
  uint32 unseen_received_host_request_count = 6;
  uint32 pending_friend_request_count = 4;
}

message MutualFriend {
  int64 user_id = 1;
  string username = 2;
  string name = 3;
}

enum HostingStatus {
  HOSTING_STATUS_UNSPECIFIED = 0;
  HOSTING_STATUS_UNKNOWN = 1;
  HOSTING_STATUS_CAN_HOST = 2;
  HOSTING_STATUS_MAYBE = 3;
  HOSTING_STATUS_CANT_HOST = 4;
}

enum MeetupStatus {
  MEETUP_STATUS_UNSPECIFIED = 0;
  MEETUP_STATUS_UNKNOWN = 1;
  MEETUP_STATUS_WANTS_TO_MEETUP = 2;
  MEETUP_STATUS_OPEN_TO_MEETUP = 3;
  MEETUP_STATUS_DOES_NOT_WANT_TO_MEETUP = 4;
}

message LanguageAbility {
  enum Fluency {
    FLUENCY_UNKNOWN = 0;
    FLUENCY_BEGINNER = 1;
    FLUENCY_CONVERSATIONAL = 2;
    FLUENCY_FLUENT = 3;
  }
  // ISO639-3 language code, only a subset is accepted, see the languages.json in the source tree
  // frontends are responsible for translation between language name and code
  // backend will double check the code is allowed
  string code = 1;
  Fluency fluency = 2;
}

enum SmokingLocation {
  SMOKING_LOCATION_UNSPECIFIED = 0;
  SMOKING_LOCATION_UNKNOWN = 1;
  SMOKING_LOCATION_YES = 2;
  SMOKING_LOCATION_WINDOW = 3;
  SMOKING_LOCATION_OUTSIDE = 4;
  SMOKING_LOCATION_NO = 5;
}

enum SleepingArrangement {
  SLEEPING_ARRANGEMENT_UNSPECIFIED = 0;
  SLEEPING_ARRANGEMENT_UNKNOWN = 1;
  SLEEPING_ARRANGEMENT_PRIVATE = 2;
  SLEEPING_ARRANGEMENT_COMMON = 3;
  SLEEPING_ARRANGEMENT_SHARED_ROOM = 4;
  SLEEPING_ARRANGEMENT_SHARED_SPACE = 5;
}

enum ParkingDetails {
  PARKING_DETAILS_UNSPECIFIED = 0;
  PARKING_DETAILS_UNKNOWN = 1;
  PARKING_DETAILS_FREE_ONSITE = 2;
  PARKING_DETAILS_FREE_OFFSITE = 3;
  PARKING_DETAILS_PAID_ONSITE = 4;
  PARKING_DETAILS_PAID_OFFSITE = 5;
}

message NullableUInt32Value {
  bool is_null = 1;
  uint32 value = 2;
}

message NullableBoolValue {
  bool is_null = 1;
  bool value = 2;
}

message NullableStringValue {
  bool is_null = 1;
  string value = 2;
}

message User {
  enum FriendshipStatus {
    NOT_FRIENDS = 0;
    FRIENDS = 1;
    PENDING = 2;
    NA = 3; // not applicable, e.g. user requesting is self
  }

  int64 user_id = 1;
  string username = 2;
  string name = 3;
  string city = 4;
  string hometown = 100;

  // the user's time zonename derived from their coordinates, for example "Australia/Melbourne"
  string timezone = 122;

  // doubles are enough to describe lat/lng
  // in EPSG4326, lat & lon are in degress, check the EPS4326 definition for details
  // returned as 0.0 (default) if these are not set, note this should only happen with incomplete profiles!
  double lat = 33;
  double lng = 34;
  double radius = 35; // meters

  double verification = 5; // 1.0 if phone number verified, 0.0 otherwise
  double community_standing = 6;
  uint32 num_references = 7;
  string gender = 8;
  string pronouns = 101;
  uint32 age = 9;
  google.protobuf.Timestamp joined = 11; // not exact
  google.protobuf.Timestamp last_active = 12; // not exact
  HostingStatus hosting_status = 13;
  MeetupStatus meetup_status = 102;
  string occupation = 14;
  string education = 103; // CommonMark without images
  string about_me = 15; // CommonMark without images
  string my_travels = 104; // CommonMark without images
  string things_i_like = 105; // CommonMark without images
  string about_place = 16; // CommonMark without images
  repeated string regions_visited = 40;
  repeated string regions_lived = 41;
  string additional_information = 106; // CommonMark without images

  FriendshipStatus friends = 20;
  // only present if friends == FriendshipStatus.PENDING
  FriendRequest pending_friend_request = 36;

  google.protobuf.UInt32Value max_guests = 22;
  google.protobuf.BoolValue last_minute = 24;
  google.protobuf.BoolValue has_pets = 107;
  google.protobuf.BoolValue accepts_pets = 25;
  google.protobuf.StringValue pet_details = 108;
  google.protobuf.BoolValue has_kids = 109;
  google.protobuf.BoolValue accepts_kids = 26;
  google.protobuf.StringValue kid_details = 110;
  google.protobuf.BoolValue has_housemates = 111;
  google.protobuf.StringValue housemate_details = 112;
  google.protobuf.BoolValue wheelchair_accessible = 27;
  SmokingLocation smoking_allowed = 28;
  google.protobuf.BoolValue smokes_at_home = 113;
  google.protobuf.BoolValue drinking_allowed = 114;
  google.protobuf.BoolValue drinks_at_home = 115;
  google.protobuf.StringValue other_host_info = 116; // CommonMark without images
  SleepingArrangement sleeping_arrangement = 117;
  google.protobuf.StringValue sleeping_details = 118; // CommonMark without images
  google.protobuf.StringValue area = 30; // CommonMark without images
  google.protobuf.StringValue house_rules = 31; // CommonMark without images
  google.protobuf.BoolValue parking = 119;
  ParkingDetails parking_details = 120; // CommonMark without images
  google.protobuf.BoolValue camping_ok = 121;

  string avatar_url = 32;
  repeated LanguageAbility language_abilities = 37;
}

message GetUserReq {
  string user = 1;
}

message RepeatedStringValue {
  // A RepeatedStringValue is like a "protobuf wrapper" (like {Type}Value) but for repeated strings
  // allows us to determine if the user wanted to remove this list of strings or just didn't modify it
  repeated string value = 2;
}

message RepeatedLanguageAbilityValue {
  // A RepeatedLanguageAbilityValue is like a "protobuf wrapper" (like {Type}Value) but for repeated LanguageAbility
  // allows us to determine if the user wanted to remote this list of LanguageAbility's
  repeated LanguageAbility value = 1;
}

message UpdateProfileReq {
  // These StringValue types allow us to determine if the value is absent versus ""

  google.protobuf.StringValue name = 1;

  google.protobuf.StringValue city = 2;
  NullableStringValue hometown = 100;
  // doubles are enough to describe lat/lng
  // in EPSG4326, lat & lon are in degress, check the EPS4326 definition for details
  google.protobuf.DoubleValue lat = 22;
  google.protobuf.DoubleValue lng = 23;
  google.protobuf.DoubleValue radius = 24; // metres

  NullableStringValue avatar_key = 25; // result from media server
  NullableStringValue pronouns = 101;
  NullableStringValue occupation = 4;
  NullableStringValue education = 102; // CommonMark without images
  NullableStringValue about_me = 5; // CommonMark without images
  NullableStringValue my_travels = 103; // CommonMark without images
  NullableStringValue things_i_like = 104; // CommonMark without images
  NullableStringValue about_place = 6; // CommonMark without images

  HostingStatus hosting_status = 8;
  MeetupStatus meetup_status = 105;

  RepeatedStringValue regions_visited = 30;
  RepeatedStringValue regions_lived = 31;
  NullableStringValue additional_information = 106; // CommonMark without images

  NullableUInt32Value max_guests = 12;
  NullableBoolValue last_minute = 14;
  NullableBoolValue has_pets = 107;
  NullableBoolValue accepts_pets = 15;
  NullableStringValue pet_details = 108; // CommonMark without images
  NullableBoolValue has_kids = 109;
  NullableBoolValue accepts_kids = 16;
  NullableStringValue kid_details = 110; // CommonMark without images
  NullableBoolValue has_housemates = 111;
  NullableStringValue housemate_details = 112; // CommonMark without images
  NullableBoolValue wheelchair_accessible = 17;
  SmokingLocation smoking_allowed = 18;
  NullableBoolValue smokes_at_home = 113;
  NullableBoolValue drinking_allowed = 114;
  NullableBoolValue drinks_at_home = 115;
  NullableStringValue other_host_info = 116; // CommonMark without images
  SleepingArrangement sleeping_arrangement = 117;
  NullableStringValue sleeping_details = 118; // CommonMark without images
  NullableStringValue area = 20; // CommonMark without images
  NullableStringValue house_rules = 21; // CommonMark without images
  NullableBoolValue parking = 119;
  ParkingDetails parking_details = 120; // CommonMark without images
  NullableBoolValue camping_ok = 121;
  // replaces the current language abilities with a new list
  // only a subset of language codes can be used, see languages.json for that list
  RepeatedLanguageAbilityValue language_abilities = 26;
}

message InitiateMediaUploadRes {
  // URL to POST the data to
  string upload_url = 1;
  google.protobuf.Timestamp expiry = 2;
}

syntax = "proto3";

package org.couchers.api.requests;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "annotations.proto";
import "conversations.proto";

service Requests {
  option (auth_level) = AUTH_LEVEL_SECURE;

  rpc CreateHostRequest(CreateHostRequestReq) returns (CreateHostRequestRes);

  rpc GetHostRequest(GetHostRequestReq) returns (HostRequest);

  // Change the status of a host request.
  // Throws NOT_FOUND if you don't have a host request of that id, NOT_AUTHORIZED
  // if you try to change the status to one you aren't allowed.
  rpc RespondHostRequest(RespondHostRequestReq) returns (google.protobuf.Empty);

  rpc ListHostRequests(ListHostRequestsReq) returns (ListHostRequestsRes);
}

message CreateHostRequestReq {
  int64 host_user_id = 1;
  // dates as "yyyy-mm-dd", in the timezone of the host
  string from_date = 2;
  string to_date = 3;
  string text = 4;
}

message HostRequest {
  // same id as the MessageContentHostRequestCreated message
  int64 host_request_id = 1;
  int64 surfer_user_id = 2;
  int64 host_user_id = 3;
  int64 chat_id = 4;
  org.couchers.api.conversations.HostRequestStatus status = 5;
  google.protobuf.Timestamp created = 6;

  // dates as "yyyy-mm-dd", these are associated with a timezone, but that's not yet returned here TODO?
  string from_date = 7;
  string to_date = 8;
  uint32 unseen_message_count = 9;
  // message to display as preview - may not be the latest message
  // for example, if there are more recent host requests
  org.couchers.api.conversations.Message preview_message = 10;
}

message GetHostRequestReq {
  int64 host_request_id = 1;
}

message CreateHostRequestRes {
  int64 host_request_id = 1;
}

message RespondHostRequestReq {
  int64 host_request_id = 1;
  org.couchers.api.conversations.HostRequestStatus status = 2;
  string text = 3;
}

message ListHostRequestsReq {
  uint32 page_size = 1;
  string page_token = 2;

  // Whether to only show pending, accepted and
  // confirmed requests which haven't passed the
  // end date.
  bool only_active = 3;

  bool only_sent = 4;
  bool only_received = 5;
}

message ListHostRequestsRes {
  repeated HostRequest host_requests = 1;
  string next_page_token = 2;
}

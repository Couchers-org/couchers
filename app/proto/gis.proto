syntax = "proto3";

package org.couchers.json;

import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "google/protobuf/empty.proto";

import "annotations.proto";

service GIS {
  option (auth_level) = AUTH_LEVEL_SECURE;

  rpc GetUsers(google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get : "/geojson/users"
    };
  }

  rpc GetUsersMVT(GetUsersMVTReq) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get : "/mvt/users/{query}/{nonce}/{sig}/{x}/{y}/{z}/mvt.pb"
    };
  }

  rpc GetCommunities(google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get : "/geojson/communities"
    };
  }

  rpc GetPlaces(google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get : "/geojson/places"
    };
  }

  rpc GetGuides(google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get : "/geojson/guides"
    };
  }
}

message GetUsersMVTReq {
  uint32 x = 1;
  uint32 y = 2;
  uint32 z = 3;

  // url-safe base64 encoded UserSearchReq message encrypted with aead_encrypt
  string query = 4;
  // url-safe base64 encoded UserSearchReq message encrypted with aead_encrypt
  string nonce = 5;
  // signature of the query
  string sig = 6;
}

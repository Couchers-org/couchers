syntax = "proto3";

package org.couchers.api.conversations;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

import "annotations.proto";

service Conversations {
  option (auth_level) = AUTH_LEVEL_SECURE;

  rpc ListChats(ListChatsReq) returns (ListChatsRes) {
    // Retrieves list of chats (ordered by last message), paginated
  }

  rpc GetChat(GetChatReq) returns (Chat) {
    // Retrieves chat info by id
  }

  rpc GetDirectMessage(GetDirectMessageReq) returns (Chat) {
    // Retrieves chat info for the unique (if any) direct message with a
    // given user
    //
    // Raises: NOT_FOUND if there is no such direct message thread
  }

  rpc GetChatMessages(GetChatMessagesReq) returns (GetChatMessagesRes) {
    // Retrieves messages in chat, paginated
  }

  rpc MarkLastSeenChat(MarkLastSeenChatReq) returns (google.protobuf.Empty) {
    // Marks the last message that has been seen in this chat
  }

  rpc CreateChat(CreateChatReq) returns (Chat) {
    // Creates a new chat
  }

  rpc EditChat(EditChatReq) returns (google.protobuf.Empty) {
    // Modifies chat
  }

  rpc InviteToChat(InviteToChatReq) returns (google.protobuf.Empty) {
    // Invite a person to a chat
  }

  rpc MakeChatAdmin(MakeChatAdminReq) returns (google.protobuf.Empty) {
    // Make a user an admin of a chat
  }

  rpc RemoveChatUser(RemoveChatUserReq) returns (google.protobuf.Empty) {
    // Remove a user in a chat.
  }

  rpc RemoveChatAdmin(RemoveChatAdminReq) returns (google.protobuf.Empty) {
    // Remove a user from admin in chat. TODO: Only original creator can do this
  }

  rpc SendMessage(SendMessageReq) returns (google.protobuf.Empty) {
    // Send a message to a chat
  }

  rpc LeaveChat(LeaveChatReq) returns (google.protobuf.Empty) {
    // Leave a chat
  }

  rpc SearchMessages(SearchMessagesReq) returns (SearchMessagesRes) {
    // Search messages by string
  }
}

message MessageContentText {
  string text = 1; // plain text
}

message MessageContentChatCreated {}

message MessageContentChatEdited {}

message MessageContentUserInvited {
  int64 target_user_id = 2;
}

message MessageContentUserLeft {}

message MessageContentUserMadeAdmin {
  int64 target_user_id = 2;
}

message MessageContentUserRemovedAdmin {
  int64 target_user_id = 2;
}

// field in Message, when a user is removed by admin
message MessageContentUserRemoved {
  int64 target_user_id = 2;
}

// the host request id is the same as this message id
message MessageContentHostRequestCreated {
  int64 target_user_id = 2;
}

enum HostRequestStatus {
  HOST_REQUEST_STATUS_PENDING = 0;
  HOST_REQUEST_STATUS_ACCEPTED = 1;
  HOST_REQUEST_STATUS_REJECTED = 2;
  HOST_REQUEST_STATUS_CONFIRMED = 3;
  HOST_REQUEST_STATUS_CANCELLED = 4;
  HOST_REQUEST_STATUS_MAYBE_ACCEPTED = 5;
}

message MessageContentHostRequestStatusChanged {
  int64 host_request_id = 2;
  // this is the new host request status
  HostRequestStatus status = 3;
}

message Message {
  int64 message_id = 101;
  int64 author_user_id = 102;
  google.protobuf.Timestamp time = 3;
  oneof content {
    MessageContentText text = 4; // plain text

    MessageContentChatCreated chat_created = 5;
    MessageContentChatEdited chat_edited = 6;
    MessageContentUserInvited user_invited = 7;
    MessageContentUserLeft user_left = 8;
    MessageContentUserMadeAdmin user_made_admin = 9;
    MessageContentUserRemovedAdmin user_removed_admin = 10;
    MessageContentHostRequestStatusChanged host_request_status_changed = 11;
    MessageContentUserRemoved chat_user_removed = 12; // user removed by admin
    MessageContentHostRequestCreated host_request_created = 13;
  }
}

message Chat {
  int64 chat_id = 1;
  string title = 2;
  repeated int64 member_user_ids = 3; // inclusive of admins
  repeated int64 admin_user_ids = 4;
  bool only_admins_invite = 5;
  bool is_dm = 6;
  google.protobuf.Timestamp created = 7;
  uint32 unseen_message_count = 8;
  uint64 last_seen_message_id = 9;
  Message latest_message = 10;
}

message GetChatReq {
  int64 chat_id = 1;
}

message ListChatsReq {
  uint32 page_size = 1;
  string page_token = 2;
}

message ListChatsRes {
  repeated Chat chats = 1;
  string next_page_token = 2;
}

message GetDirectMessageReq {
  int64 user_id = 2;
}

message GetChatMessagesReq {
  uint64 chat_id = 1;
  // loads messages later than and including this id
  // if page_token is set, this is ignored
  // if this is 0, loads the most recent messages
  int64 initial_message_id = 2;
  uint32 page_size = 3;
  string page_token = 4;
}

message GetChatMessagesRes {
  repeated Message messages = 1;
  string next_page_token = 2;
  string previous_page_token = 3;
}

message MarkLastSeenChatReq {
  int64 chat_id = 1;
  int64 last_seen_message_id = 2;
}

message CreateChatReq {
  google.protobuf.StringValue title = 1;
  repeated int64 recipient_user_ids = 2;
}

message EditChatReq {
  int64 chat_id = 1;
  google.protobuf.StringValue title = 2;
  google.protobuf.BoolValue only_admins_invite = 3;
}

message InviteToChatReq {
  int64 chat_id = 1;
  int64 user_id = 2;
}

message MakeChatAdminReq {
  int64 chat_id = 1;
  int64 user_id = 2;
}

// required fields and types
message RemoveChatUserReq {
  int64 chat_id = 1;
  int64 user_id = 2;
}

message RemoveChatAdminReq {
  int64 chat_id = 1;
  int64 user_id = 2;
}

message SendMessageReq {
  int64 chat_id = 3;
  string text = 2;
}

message LeaveChatReq {
  int64 chat_id = 1;
}

message SearchMessagesReq {
  string query = 1;
  uint32 page_size = 4;
  string page_token = 5;
}

message MessageSearchResult {
  int64 chat_id = 3;
  Message message = 2;
}

message SearchMessagesRes {
  repeated MessageSearchResult results = 1;
  string next_page_token = 4;
}

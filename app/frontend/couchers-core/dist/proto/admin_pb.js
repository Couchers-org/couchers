"use strict";
// source: admin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
var annotations_pb = require('./annotations_pb.js');
goog.object.extend(proto, annotations_pb);
var communities_pb = require('./communities_pb.js');
goog.object.extend(proto, communities_pb);
goog.exportSymbol('proto.org.couchers.admin.BanUserReq', null, global);
goog.exportSymbol('proto.org.couchers.admin.ChangeUserBirthdateReq', null, global);
goog.exportSymbol('proto.org.couchers.admin.ChangeUserGenderReq', null, global);
goog.exportSymbol('proto.org.couchers.admin.CreateApiKeyReq', null, global);
goog.exportSymbol('proto.org.couchers.admin.CreateApiKeyRes', null, global);
goog.exportSymbol('proto.org.couchers.admin.CreateCommunityReq', null, global);
goog.exportSymbol('proto.org.couchers.admin.DeleteUserReq', null, global);
goog.exportSymbol('proto.org.couchers.admin.GetUserDetailsReq', null, global);
goog.exportSymbol('proto.org.couchers.admin.GetUserDetailsRes', null, global);
goog.exportSymbol('proto.org.couchers.admin.UserDetails', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.UserDetails = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.admin.UserDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.UserDetails.displayName = 'proto.org.couchers.admin.UserDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.GetUserDetailsReq = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.admin.GetUserDetailsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.GetUserDetailsReq.displayName = 'proto.org.couchers.admin.GetUserDetailsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.GetUserDetailsRes = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.admin.GetUserDetailsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.GetUserDetailsRes.displayName = 'proto.org.couchers.admin.GetUserDetailsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.ChangeUserGenderReq = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.admin.ChangeUserGenderReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.ChangeUserGenderReq.displayName = 'proto.org.couchers.admin.ChangeUserGenderReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.ChangeUserBirthdateReq = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.admin.ChangeUserBirthdateReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.ChangeUserBirthdateReq.displayName = 'proto.org.couchers.admin.ChangeUserBirthdateReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.BanUserReq = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.admin.BanUserReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.BanUserReq.displayName = 'proto.org.couchers.admin.BanUserReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.DeleteUserReq = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.admin.DeleteUserReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.DeleteUserReq.displayName = 'proto.org.couchers.admin.DeleteUserReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.CreateApiKeyReq = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.admin.CreateApiKeyReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.CreateApiKeyReq.displayName = 'proto.org.couchers.admin.CreateApiKeyReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.CreateApiKeyRes = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.admin.CreateApiKeyRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.CreateApiKeyRes.displayName = 'proto.org.couchers.admin.CreateApiKeyRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.admin.CreateCommunityReq = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.org.couchers.admin.CreateCommunityReq.repeatedFields_, null);
};
goog.inherits(proto.org.couchers.admin.CreateCommunityReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.org.couchers.admin.CreateCommunityReq.displayName = 'proto.org.couchers.admin.CreateCommunityReq';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.UserDetails.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.UserDetails.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.UserDetails} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.UserDetails.toObject = function (includeInstance, msg) {
        var f, obj = {
            userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
            username: jspb.Message.getFieldWithDefault(msg, 2, ""),
            email: jspb.Message.getFieldWithDefault(msg, 3, ""),
            gender: jspb.Message.getFieldWithDefault(msg, 4, ""),
            birthdate: jspb.Message.getFieldWithDefault(msg, 7, ""),
            banned: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
            deleted: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.UserDetails}
 */
proto.org.couchers.admin.UserDetails.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.UserDetails;
    return proto.org.couchers.admin.UserDetails.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.UserDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.UserDetails}
 */
proto.org.couchers.admin.UserDetails.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setUserId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUsername(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setEmail(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setGender(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setBirthdate(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setBanned(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setDeleted(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.UserDetails.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.UserDetails.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.UserDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.UserDetails.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUserId();
    if (f !== 0) {
        writer.writeInt64(1, f);
    }
    f = message.getUsername();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getEmail();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getGender();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getBirthdate();
    if (f.length > 0) {
        writer.writeString(7, f);
    }
    f = message.getBanned();
    if (f) {
        writer.writeBool(5, f);
    }
    f = message.getDeleted();
    if (f) {
        writer.writeBool(6, f);
    }
};
/**
 * optional int64 user_id = 1;
 * @return {number}
 */
proto.org.couchers.admin.UserDetails.prototype.getUserId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.org.couchers.admin.UserDetails} returns this
 */
proto.org.couchers.admin.UserDetails.prototype.setUserId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional string username = 2;
 * @return {string}
 */
proto.org.couchers.admin.UserDetails.prototype.getUsername = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.UserDetails} returns this
 */
proto.org.couchers.admin.UserDetails.prototype.setUsername = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string email = 3;
 * @return {string}
 */
proto.org.couchers.admin.UserDetails.prototype.getEmail = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.UserDetails} returns this
 */
proto.org.couchers.admin.UserDetails.prototype.setEmail = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional string gender = 4;
 * @return {string}
 */
proto.org.couchers.admin.UserDetails.prototype.getGender = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.UserDetails} returns this
 */
proto.org.couchers.admin.UserDetails.prototype.setGender = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional string birthdate = 7;
 * @return {string}
 */
proto.org.couchers.admin.UserDetails.prototype.getBirthdate = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.UserDetails} returns this
 */
proto.org.couchers.admin.UserDetails.prototype.setBirthdate = function (value) {
    return jspb.Message.setProto3StringField(this, 7, value);
};
/**
 * optional bool banned = 5;
 * @return {boolean}
 */
proto.org.couchers.admin.UserDetails.prototype.getBanned = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};
/**
 * @param {boolean} value
 * @return {!proto.org.couchers.admin.UserDetails} returns this
 */
proto.org.couchers.admin.UserDetails.prototype.setBanned = function (value) {
    return jspb.Message.setProto3BooleanField(this, 5, value);
};
/**
 * optional bool deleted = 6;
 * @return {boolean}
 */
proto.org.couchers.admin.UserDetails.prototype.getDeleted = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};
/**
 * @param {boolean} value
 * @return {!proto.org.couchers.admin.UserDetails} returns this
 */
proto.org.couchers.admin.UserDetails.prototype.setDeleted = function (value) {
    return jspb.Message.setProto3BooleanField(this, 6, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.GetUserDetailsReq.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.GetUserDetailsReq.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.GetUserDetailsReq} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.GetUserDetailsReq.toObject = function (includeInstance, msg) {
        var f, obj = {
            user: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.GetUserDetailsReq}
 */
proto.org.couchers.admin.GetUserDetailsReq.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.GetUserDetailsReq;
    return proto.org.couchers.admin.GetUserDetailsReq.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.GetUserDetailsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.GetUserDetailsReq}
 */
proto.org.couchers.admin.GetUserDetailsReq.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.GetUserDetailsReq.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.GetUserDetailsReq.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.GetUserDetailsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.GetUserDetailsReq.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUser();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string user = 1;
 * @return {string}
 */
proto.org.couchers.admin.GetUserDetailsReq.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.GetUserDetailsReq} returns this
 */
proto.org.couchers.admin.GetUserDetailsReq.prototype.setUser = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.GetUserDetailsRes.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.GetUserDetailsRes.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.GetUserDetailsRes} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.GetUserDetailsRes.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.GetUserDetailsRes}
 */
proto.org.couchers.admin.GetUserDetailsRes.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.GetUserDetailsRes;
    return proto.org.couchers.admin.GetUserDetailsRes.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.GetUserDetailsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.GetUserDetailsRes}
 */
proto.org.couchers.admin.GetUserDetailsRes.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.GetUserDetailsRes.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.GetUserDetailsRes.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.GetUserDetailsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.GetUserDetailsRes.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.ChangeUserGenderReq.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.ChangeUserGenderReq.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.ChangeUserGenderReq} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.ChangeUserGenderReq.toObject = function (includeInstance, msg) {
        var f, obj = {
            user: jspb.Message.getFieldWithDefault(msg, 1, ""),
            gender: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.ChangeUserGenderReq}
 */
proto.org.couchers.admin.ChangeUserGenderReq.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.ChangeUserGenderReq;
    return proto.org.couchers.admin.ChangeUserGenderReq.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.ChangeUserGenderReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.ChangeUserGenderReq}
 */
proto.org.couchers.admin.ChangeUserGenderReq.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setGender(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.ChangeUserGenderReq.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.ChangeUserGenderReq.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.ChangeUserGenderReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.ChangeUserGenderReq.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUser();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getGender();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string user = 1;
 * @return {string}
 */
proto.org.couchers.admin.ChangeUserGenderReq.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.ChangeUserGenderReq} returns this
 */
proto.org.couchers.admin.ChangeUserGenderReq.prototype.setUser = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string gender = 2;
 * @return {string}
 */
proto.org.couchers.admin.ChangeUserGenderReq.prototype.getGender = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.ChangeUserGenderReq} returns this
 */
proto.org.couchers.admin.ChangeUserGenderReq.prototype.setGender = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.ChangeUserBirthdateReq.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.ChangeUserBirthdateReq.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.ChangeUserBirthdateReq} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.ChangeUserBirthdateReq.toObject = function (includeInstance, msg) {
        var f, obj = {
            user: jspb.Message.getFieldWithDefault(msg, 1, ""),
            birthdate: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.ChangeUserBirthdateReq}
 */
proto.org.couchers.admin.ChangeUserBirthdateReq.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.ChangeUserBirthdateReq;
    return proto.org.couchers.admin.ChangeUserBirthdateReq.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.ChangeUserBirthdateReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.ChangeUserBirthdateReq}
 */
proto.org.couchers.admin.ChangeUserBirthdateReq.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setBirthdate(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.ChangeUserBirthdateReq.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.ChangeUserBirthdateReq.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.ChangeUserBirthdateReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.ChangeUserBirthdateReq.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUser();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getBirthdate();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string user = 1;
 * @return {string}
 */
proto.org.couchers.admin.ChangeUserBirthdateReq.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.ChangeUserBirthdateReq} returns this
 */
proto.org.couchers.admin.ChangeUserBirthdateReq.prototype.setUser = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string birthdate = 2;
 * @return {string}
 */
proto.org.couchers.admin.ChangeUserBirthdateReq.prototype.getBirthdate = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.ChangeUserBirthdateReq} returns this
 */
proto.org.couchers.admin.ChangeUserBirthdateReq.prototype.setBirthdate = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.BanUserReq.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.BanUserReq.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.BanUserReq} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.BanUserReq.toObject = function (includeInstance, msg) {
        var f, obj = {
            user: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.BanUserReq}
 */
proto.org.couchers.admin.BanUserReq.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.BanUserReq;
    return proto.org.couchers.admin.BanUserReq.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.BanUserReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.BanUserReq}
 */
proto.org.couchers.admin.BanUserReq.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.BanUserReq.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.BanUserReq.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.BanUserReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.BanUserReq.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUser();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string user = 1;
 * @return {string}
 */
proto.org.couchers.admin.BanUserReq.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.BanUserReq} returns this
 */
proto.org.couchers.admin.BanUserReq.prototype.setUser = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.DeleteUserReq.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.DeleteUserReq.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.DeleteUserReq} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.DeleteUserReq.toObject = function (includeInstance, msg) {
        var f, obj = {
            user: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.DeleteUserReq}
 */
proto.org.couchers.admin.DeleteUserReq.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.DeleteUserReq;
    return proto.org.couchers.admin.DeleteUserReq.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.DeleteUserReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.DeleteUserReq}
 */
proto.org.couchers.admin.DeleteUserReq.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.DeleteUserReq.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.DeleteUserReq.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.DeleteUserReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.DeleteUserReq.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUser();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string user = 1;
 * @return {string}
 */
proto.org.couchers.admin.DeleteUserReq.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.DeleteUserReq} returns this
 */
proto.org.couchers.admin.DeleteUserReq.prototype.setUser = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.CreateApiKeyReq.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.CreateApiKeyReq.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.CreateApiKeyReq} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.CreateApiKeyReq.toObject = function (includeInstance, msg) {
        var f, obj = {
            user: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.CreateApiKeyReq}
 */
proto.org.couchers.admin.CreateApiKeyReq.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.CreateApiKeyReq;
    return proto.org.couchers.admin.CreateApiKeyReq.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.CreateApiKeyReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.CreateApiKeyReq}
 */
proto.org.couchers.admin.CreateApiKeyReq.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.CreateApiKeyReq.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.CreateApiKeyReq.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.CreateApiKeyReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.CreateApiKeyReq.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUser();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string user = 1;
 * @return {string}
 */
proto.org.couchers.admin.CreateApiKeyReq.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.CreateApiKeyReq} returns this
 */
proto.org.couchers.admin.CreateApiKeyReq.prototype.setUser = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.CreateApiKeyRes.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.CreateApiKeyRes.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.CreateApiKeyRes} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.CreateApiKeyRes.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.CreateApiKeyRes}
 */
proto.org.couchers.admin.CreateApiKeyRes.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.CreateApiKeyRes;
    return proto.org.couchers.admin.CreateApiKeyRes.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.CreateApiKeyRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.CreateApiKeyRes}
 */
proto.org.couchers.admin.CreateApiKeyRes.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.CreateApiKeyRes.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.CreateApiKeyRes.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.CreateApiKeyRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.CreateApiKeyRes.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.couchers.admin.CreateCommunityReq.repeatedFields_ = [5];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.org.couchers.admin.CreateCommunityReq.prototype.toObject = function (opt_includeInstance) {
        return proto.org.couchers.admin.CreateCommunityReq.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.org.couchers.admin.CreateCommunityReq} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.org.couchers.admin.CreateCommunityReq.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, ""),
            slug: jspb.Message.getFieldWithDefault(msg, 2, ""),
            description: jspb.Message.getFieldWithDefault(msg, 3, ""),
            parentNodeId: jspb.Message.getFieldWithDefault(msg, 4, 0),
            adminIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
            geojson: jspb.Message.getFieldWithDefault(msg, 6, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.admin.CreateCommunityReq}
 */
proto.org.couchers.admin.CreateCommunityReq.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.org.couchers.admin.CreateCommunityReq;
    return proto.org.couchers.admin.CreateCommunityReq.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.admin.CreateCommunityReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.admin.CreateCommunityReq}
 */
proto.org.couchers.admin.CreateCommunityReq.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSlug(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setDescription(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setParentNodeId(value);
                break;
            case 5:
                var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
                msg.setAdminIdsList(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setGeojson(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.admin.CreateCommunityReq.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.admin.CreateCommunityReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.admin.CreateCommunityReq.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSlug();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getDescription();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getParentNodeId();
    if (f !== 0) {
        writer.writeInt64(4, f);
    }
    f = message.getAdminIdsList();
    if (f.length > 0) {
        writer.writePackedInt64(5, f);
    }
    f = message.getGeojson();
    if (f.length > 0) {
        writer.writeString(6, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.CreateCommunityReq} returns this
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string slug = 2;
 * @return {string}
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.getSlug = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.CreateCommunityReq} returns this
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.setSlug = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string description = 3;
 * @return {string}
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.getDescription = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.CreateCommunityReq} returns this
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.setDescription = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional int64 parent_node_id = 4;
 * @return {number}
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.getParentNodeId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.org.couchers.admin.CreateCommunityReq} returns this
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.setParentNodeId = function (value) {
    return jspb.Message.setProto3IntField(this, 4, value);
};
/**
 * repeated int64 admin_ids = 5;
 * @return {!Array<number>}
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.getAdminIdsList = function () {
    return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};
/**
 * @param {!Array<number>} value
 * @return {!proto.org.couchers.admin.CreateCommunityReq} returns this
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.setAdminIdsList = function (value) {
    return jspb.Message.setField(this, 5, value || []);
};
/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.org.couchers.admin.CreateCommunityReq} returns this
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.addAdminIds = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.couchers.admin.CreateCommunityReq} returns this
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.clearAdminIdsList = function () {
    return this.setAdminIdsList([]);
};
/**
 * optional string geojson = 6;
 * @return {string}
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.getGeojson = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.org.couchers.admin.CreateCommunityReq} returns this
 */
proto.org.couchers.admin.CreateCommunityReq.prototype.setGeojson = function (value) {
    return jspb.Message.setProto3StringField(this, 6, value);
};
goog.object.extend(exports, proto.org.couchers.admin);
//# sourceMappingURL=admin_pb.js.map
stages:
  - protos
  - build
  - test
  - preview
  - release

variables:
  DO_CHECKS: "true"
  PREVIEW_DOMAIN: preview.couchershq.org
  GIT_DEPTH: 10
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  RELEASE_BRANCH: develop
  GRPC_TAG: registry.gitlab.com/couchers/grpc:latest
  PROXY_RELEASE_TAG: $CI_REGISTRY_IMAGE/proxy:latest
  NGINX_RELEASE_TAG: $CI_REGISTRY_IMAGE/nginx:latest
  NGINX_NEXT_RELEASE_TAG: $CI_REGISTRY_IMAGE/nginx-next:latest
  BACKEND_RELEASE_TAG: $CI_REGISTRY_IMAGE/backend:latest
  MEDIA_RELEASE_TAG: $CI_REGISTRY_IMAGE/media:latest
  PROMETHEUS_RELEASE_TAG: $CI_REGISTRY_IMAGE/prometheus:latest
  WEB_RELEASE_TAG: $CI_REGISTRY_IMAGE/web:latest
  MOBILE_APP_RELEASE_TAG: $CI_REGISTRY_IMAGE/mobile-app:latest
  MOBILE_APP_PREVIEW_RELEASE_TAG: $CI_REGISTRY_IMAGE/mobile-app-preview:latest
  WEB_NEXT_RELEASE_TAG: $CI_REGISTRY_IMAGE/web-next:latest
  SLUG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  PROXY_TAG: $CI_REGISTRY_IMAGE/proxy:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  NGINX_TAG: $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  NGINX_NEXT_TAG: $CI_REGISTRY_IMAGE/nginx-next:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  BACKEND_TAG: $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  MEDIA_TAG: $CI_REGISTRY_IMAGE/media:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  WEB_TAG: $CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  MOBILE_APP_TAG: $CI_REGISTRY_IMAGE/mobile-app:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  WEB_NEXT_TAG: $CI_REGISTRY_IMAGE/web-next:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  PROMETHEUS_TAG: $CI_REGISTRY_IMAGE/prometheus:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA


default:
  image: docker
  services:
    - docker:19.03.12-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


protos:
  needs: []
  stage: protos
  image: $GRPC_TAG
  inherit:
    # the grpc container doesn't have docker, no need to login
    default: false
  script:
    - cd app && ./generate_protos.sh
  rules:
    - changes:
      - app/**/*
  artifacts:
    paths:
      - app/


build:proxy:
  needs: ["protos"]
  stage: build
  script:
    - docker pull $PROXY_RELEASE_TAG || true
    - docker build --build-arg version=$SLUG --cache-from $PROXY_RELEASE_TAG -t $PROXY_TAG app/proxy/
    - docker push $PROXY_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/proto/**/*
      - app/proxy/**/*

build:nginx:
  needs: []
  stage: build
  script:
    - docker pull $NGINX_RELEASE_TAG || true
    - docker build --build-arg version=$SLUG --cache-from $NGINX_RELEASE_TAG -t $NGINX_TAG app/nginx/
    - docker push $NGINX_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

build:prometheus:
  needs: []
  stage: build
  script:
    - docker pull $PROMETHEUS_RELEASE_TAG || true
    - docker build --build-arg version=$SLUG --cache-from $PROMETHEUS_RELEASE_TAG -t $PROMETHEUS_TAG app/prometheus/
    - docker push $PROMETHEUS_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

build:backend:
  needs: ["protos"]
  stage: build
  script:
    - docker pull $BACKEND_RELEASE_TAG || true
    - docker build --build-arg version=$SLUG --cache-from $BACKEND_RELEASE_TAG -t $BACKEND_TAG app/backend/
    - docker push $BACKEND_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/proto/**/*
      - app/backend/**/*

build:media:
  needs: ["protos"]
  stage: build
  script:
    - docker pull $MEDIA_RELEASE_TAG || true
    - docker build --build-arg version=$SLUG --cache-from $MEDIA_RELEASE_TAG -t $MEDIA_TAG app/media/
    - docker push $MEDIA_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/proto/**/*
      - app/media/**/*

build:web:
  needs: ["protos"]
  stage: build
  script:
    - docker pull $WEB_RELEASE_TAG || true
    - docker build --build-arg version=$SLUG --cache-from $WEB_RELEASE_TAG -t $WEB_TAG app/web/
    - docker push $WEB_TAG
    # creates a new docker container (docker create returns the container name), and copies the /app folder to the host
    - mkdir -p artifacts && docker cp $(docker create $WEB_TAG):/app/build artifacts/web
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/proto/**/*
      - app/web/**/*
  artifacts:
    paths:
      - artifacts/web/

build:mobile-app:
  needs: ["protos"]
  stage: build
  script:
    - docker pull $MOBILE_APP_RELEASE_TAG || true
    - docker build --build-arg version=$SLUG --cache-from $MOBILE_APP_RELEASE_TAG -t $MOBILE_APP_TAG app/mobile-app/src/
    - docker push $MOBILE_APP_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/proto/**/*
      - app/mobile-app/**/*

build:nginx-next:
  needs: []
  stage: build
  script:
    - docker pull $NGINX_RELEASE_TAG || true
    - docker build --build-arg version=$SLUG-next --build-arg environment=preview --cache-from $NGINX_RELEASE_TAG -t $NGINX_NEXT_TAG app/nginx/
    - docker push $NGINX_NEXT_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/proto/**/*
      - app/nginx/**/*

build:web-next:
  needs: ["protos"]
  stage: build
  script:
    - docker pull $WEB_RELEASE_TAG || true
    # this is a bit hacky, but I don't see any other good way to get the preview env vars into the container
    - cp app/web/.env.preview app/web/.env.production
    - docker build --build-arg version=$SLUG-next --cache-from $WEB_RELEASE_TAG -t $WEB_NEXT_TAG app/web/
    - docker push $WEB_NEXT_TAG
    # creates a new docker container (docker create returns the container name), and copies the /app folder to the host
    - mkdir -p artifacts && docker cp $(docker create $WEB_NEXT_TAG):/app/build artifacts/web-next
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/proto/**/*
      - app/web/**/*
  artifacts:
    paths:
      - artifacts/web-next/

test:backend:
  needs: ["build:backend"]
  stage: test
  image: $BACKEND_TAG
  inherit:
    # no docker login
    default: false
  services:
    - name: postgis/postgis:13-3.1
      alias: postgres
      command: ["postgres", "-c", "fsync=off"]
  variables:
    POSTGRES_PASSWORD: c765064a49d18a95
    DATABASE_CONNECTION_STRING: "postgresql://postgres:c765064a49d18a95@postgres/postgres"
  before_script:
    # install latest postgres from their repos to get pg_dump compatible with postgres 13
    - sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt buster-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
    - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
    - apt-get update
    - apt-get -y install postgresql-client
  script:
    - cd /app && pytest --junitxml=junit.xml --cov=src src
  after_script:
    - cd /app && coverage xml && coverage html
    - cp /app/junit.xml $CI_PROJECT_DIR/
    - cp /app/coverage.xml $CI_PROJECT_DIR/
    - mkdir -p $CI_PROJECT_DIR/artifacts/htmlcov && cp -a /app/htmlcov $CI_PROJECT_DIR/artifacts/
  coverage: '/^TOTAL.+?(\d+\%)$/'
  artifacts:
    reports:
      cobertura: coverage.xml
      junit: junit.xml
    paths:
      - artifacts/htmlcov
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/backend/**/*

test:media:
  needs: ["build:media"]
  stage: test
  image: $MEDIA_TAG
  inherit:
    # no docker login
    default: false
  variables:
    MEDIA_SERVER_FROM_ENV: 0
  script:
    - cd /app && pytest src --junitxml=junit.xml
  after_script:
    - cp /app/junit.xml $CI_PROJECT_DIR/junit.xml
  artifacts:
    reports:
      junit: junit.xml
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/media/**/*

test:web:
  needs: ["build:web"]
  stage: test
  image: $WEB_TAG
  inherit:
    # no docker login
    default: false
  script:
    - cd /app && yarn test-ci
  after_script:
    - cp /app/junit.xml $CI_PROJECT_DIR/
    - cp /app/coverage/cobertura-coverage.xml $CI_PROJECT_DIR/
    - mkdir -p $CI_PROJECT_DIR/artifacts/lcov-report && cp -a /app/coverage/lcov-report $CI_PROJECT_DIR/artifacts/
  coverage: '/^All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    reports:
      cobertura: cobertura-coverage.xml
      junit: junit.xml
    paths:
      - artifacts/lcov-report
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/web/**/*

test:mobile-app:
  needs: ["build:mobile-app"]
  stage: test
  image: $MOBILE_APP_TAG
  inherit:
    # no docker login
    default: false
  script:
    - cd /app && yarn jest --ci
    # we may want to add junit.xml and some kind of coverage tool here as we go.
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/mobile-app/**/*

test:web-prettier:
  needs: ["build:web"]
  stage: test
  image: $WEB_TAG
  inherit:
    # no docker login
    default: false
  script:
    - cd /app
    - yarn prettier --check src/*
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/web/**/*

test:storybook:
  needs: ["build:web-next"]
  stage: test
  image: $WEB_NEXT_TAG
  inherit:
    # no docker login
    default: false
  script:
    - cd /app && yarn build-storybook
    - mkdir -p $CI_PROJECT_DIR/artifacts/storybook-static && cp -a /app/storybook-static $CI_PROJECT_DIR/artifacts/
  artifacts:
    paths:
      - artifacts/storybook-static
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/web/**/*

test:web-next:
  needs: ["build:web-next"]
  stage: test
  image: $WEB_NEXT_TAG
  inherit:
    # no docker login
    default: false
  script:
    - cd /app && yarn test-ci
  after_script:
    - cp /app/junit.xml $CI_PROJECT_DIR/
    - cp /app/coverage/cobertura-coverage.xml $CI_PROJECT_DIR/
    - mkdir -p $CI_PROJECT_DIR/artifacts/lcov-report && cp -a /app/coverage/lcov-report $CI_PROJECT_DIR/artifacts/
  coverage: '/^All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    reports:
      cobertura: cobertura-coverage.xml
      junit: junit.xml
    paths:
      - artifacts/lcov-report
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/web/**/*

preview:bcov:
  needs: ["test:backend"]
  stage: preview
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  inherit:
    # no docker login
    default: false
  script:
    - aws s3 rm s3://$AWS_PREVIEW_BUCKET/bcov/$CI_COMMIT_SHORT_SHA/ --recursive
    - aws s3 cp artifacts/htmlcov s3://$AWS_PREVIEW_BUCKET/bcov/$CI_COMMIT_SHORT_SHA/ --recursive
    - aws s3 rm s3://$AWS_PREVIEW_BUCKET/bcov/$CI_COMMIT_REF_SLUG/ --recursive
    - aws s3 cp artifacts/htmlcov s3://$AWS_PREVIEW_BUCKET/bcov/$CI_COMMIT_REF_SLUG/ --recursive
    - echo "Done, coverage report available at https://$CI_COMMIT_SHORT_SHA--bcov.$PREVIEW_DOMAIN/ and https://$CI_COMMIT_REF_SLUG--bcov.$PREVIEW_DOMAIN/"
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/backend/**/*

preview:wcov:
  needs: ["test:web-next"]
  stage: preview
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  inherit:
    # no docker login
    default: false
  script:
    - aws s3 rm s3://$AWS_PREVIEW_BUCKET/wcov/$CI_COMMIT_SHORT_SHA/ --recursive
    - aws s3 cp artifacts/lcov-report s3://$AWS_PREVIEW_BUCKET/wcov/$CI_COMMIT_SHORT_SHA/ --recursive
    - aws s3 rm s3://$AWS_PREVIEW_BUCKET/wcov/$CI_COMMIT_REF_SLUG/ --recursive
    - aws s3 cp artifacts/lcov-report s3://$AWS_PREVIEW_BUCKET/wcov/$CI_COMMIT_REF_SLUG/ --recursive
    - echo "Done, coverage report available at https://$CI_COMMIT_SHORT_SHA--wcov.$PREVIEW_DOMAIN/ and https://$CI_COMMIT_REF_SLUG--wcov.$PREVIEW_DOMAIN/"
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/web/**/*

preview:storybook:
  needs: ["test:storybook"]
  stage: preview
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  inherit:
    # no docker login
    default: false
  script:
    - aws s3 rm s3://$AWS_PREVIEW_BUCKET/storybook/$CI_COMMIT_SHORT_SHA/ --recursive
    - aws s3 cp artifacts/storybook-static s3://$AWS_PREVIEW_BUCKET/storybook/$CI_COMMIT_SHORT_SHA/ --recursive
    - aws s3 rm s3://$AWS_PREVIEW_BUCKET/storybook/$CI_COMMIT_REF_SLUG/ --recursive
    - aws s3 cp artifacts/storybook-static s3://$AWS_PREVIEW_BUCKET/storybook/$CI_COMMIT_REF_SLUG/ --recursive
    - echo "Done, storybook available at https://$CI_COMMIT_SHORT_SHA--storybook.$PREVIEW_DOMAIN/ and https://$CI_COMMIT_REF_SLUG--storybook.$PREVIEW_DOMAIN/"
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/web/**/*

preview:web-next:
  needs: ["build:web-next"]
  stage: preview
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  inherit:
    # no docker login
    default: false
  script:
    - aws s3 rm s3://$AWS_PREVIEW_BUCKET/web/$CI_COMMIT_SHORT_SHA/ --recursive
    - aws s3 cp artifacts/web-next s3://$AWS_PREVIEW_BUCKET/web/$CI_COMMIT_SHORT_SHA/ --recursive
    - aws s3 rm s3://$AWS_PREVIEW_BUCKET/web/$CI_COMMIT_REF_SLUG/ --recursive
    - aws s3 cp artifacts/web-next s3://$AWS_PREVIEW_BUCKET/web/$CI_COMMIT_REF_SLUG/ --recursive
    - echo "Done, preview available at https://$CI_COMMIT_SHORT_SHA--web.$PREVIEW_DOMAIN/ and https://$CI_COMMIT_REF_SLUG--web.$PREVIEW_DOMAIN/"
  rules:
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH == $RELEASE_BRANCH)
      changes:
      - app/**/*
    - if: ($DO_CHECKS == "true") && ($CI_COMMIT_BRANCH != $RELEASE_BRANCH)
      changes:
      - app/proto/**/*
      - app/web/**/*

preview:mobile:
  needs: ["build:mobile"]
  stage: preview
  image: $MOBILE_APP_TAG
  # publish and tag the release
  # the last preview release will always be available in the registry as
  # $MOBILE_APP_PREVIEW_RELEASE_TAG (see above)
  script: |
    cd /app && expo publish --release-channel preview --non-interactive
    retval=$?
    if [ $retval -eq 0 ]; then
      docker pull $MOBILE_APP_TAG;
      docker tag $MOBILE_APP_TAG $MOBILE_APP_PREVIEW_RELEASE_TAG;
      docker push $MOBILE_APP_PREVIEW_RELEASE_TAG;
    else
      echo "Expo publish failed with $retval"
    fi
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop" && $CI_COMMIT_TAG =~ /mobile-preview-[0-9]\.[0-9]\.[0-9]\./'
      when: always


release:proxy:
  stage: release
  script:
    - docker pull $PROXY_TAG
    - docker tag $PROXY_TAG $PROXY_RELEASE_TAG
    - docker push $PROXY_RELEASE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:nginx:
  stage: release
  script:
    - docker pull $NGINX_TAG
    - docker tag $NGINX_TAG $NGINX_RELEASE_TAG
    - docker push $NGINX_RELEASE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:prometheus:
  stage: release
  script:
    - docker pull $PROMETHEUS_TAG
    - docker tag $PROMETHEUS_TAG $PROMETHEUS_RELEASE_TAG
    - docker push $PROMETHEUS_RELEASE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:backend:
  stage: release
  script:
    - docker pull $BACKEND_TAG
    - docker tag $BACKEND_TAG $BACKEND_RELEASE_TAG
    - docker push $BACKEND_RELEASE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:media:
  stage: release
  script:
    - docker pull $MEDIA_TAG
    - docker tag $MEDIA_TAG $MEDIA_RELEASE_TAG
    - docker push $MEDIA_RELEASE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:web:
  stage: release
  script:
    - docker pull $WEB_TAG
    - docker tag $WEB_TAG $WEB_RELEASE_TAG
    - docker push $WEB_RELEASE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:web-sourcemaps:
  stage: release
  image: $WEB_TAG
  inherit:
    # no docker login
    default: false
  script:
    - cd /app && SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN yarn upload-sourcemap
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:nginx-next:
  stage: release
  script:
    - docker pull $NGINX_NEXT_TAG
    - docker tag $NGINX_NEXT_TAG $NGINX_NEXT_RELEASE_TAG
    - docker push $NGINX_NEXT_RELEASE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:web-next:
  stage: release
  script:
    - docker pull $WEB_NEXT_TAG
    - docker tag $WEB_NEXT_TAG $WEB_NEXT_RELEASE_TAG
    - docker push $WEB_NEXT_RELEASE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
